
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  email: 'email',
  password: 'password',
  name: 'name',
  created_at: 'created_at',
  role: 'role'
};

exports.Prisma.SubjectScalarFieldEnum = {
  subject_id: 'subject_id',
  name: 'name'
};

exports.Prisma.CategoryScalarFieldEnum = {
  category_id: 'category_id',
  name: 'name',
  subject_id: 'subject_id'
};

exports.Prisma.TheoryScalarFieldEnum = {
  theory_id: 'theory_id',
  title: 'title',
  content: 'content',
  pdf_files: 'pdf_files',
  created_at: 'created_at',
  category_id: 'category_id',
  parent_id: 'parent_id'
};

exports.Prisma.QuizScalarFieldEnum = {
  quiz_id: 'quiz_id',
  title: 'title',
  description: 'description',
  difficulty: 'difficulty',
  time_limit: 'time_limit',
  is_exam_mode: 'is_exam_mode',
  created_at: 'created_at',
  updated_at: 'updated_at',
  subject_id: 'subject_id',
  category_id: 'category_id'
};

exports.Prisma.QuestionScalarFieldEnum = {
  question_id: 'question_id',
  content: 'content',
  type: 'type',
  quiz_id: 'quiz_id',
  image_url: 'image_url',
  explanation: 'explanation'
};

exports.Prisma.OptionScalarFieldEnum = {
  option_id: 'option_id',
  text: 'text',
  is_correct: 'is_correct',
  question_id: 'question_id'
};

exports.Prisma.MatchingPairScalarFieldEnum = {
  pair_id: 'pair_id',
  left: 'left',
  right: 'right',
  question_id: 'question_id'
};

exports.Prisma.QuizAttemptScalarFieldEnum = {
  qa_id: 'qa_id',
  started_at: 'started_at',
  completed_at: 'completed_at',
  score: 'score',
  total_questions: 'total_questions',
  time_spent: 'time_spent',
  status: 'status',
  user_id: 'user_id',
  quiz_id: 'quiz_id'
};

exports.Prisma.AnswerScalarFieldEnum = {
  answer_id: 'answer_id',
  response_text: 'response_text',
  option_id: 'option_id',
  question_id: 'question_id',
  qa_id: 'qa_id'
};

exports.Prisma.FlashcardScalarFieldEnum = {
  flashcard_id: 'flashcard_id',
  front: 'front',
  back: 'back',
  difficulty: 'difficulty',
  created_at: 'created_at',
  updated_at: 'updated_at',
  category_id: 'category_id',
  user_id: 'user_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Difficulty = exports.$Enums.Difficulty = {
  FACILE: 'FACILE',
  MOYEN: 'MOYEN',
  DIFFICILE: 'DIFFICILE'
};

exports.QuizStatus = exports.$Enums.QuizStatus = {
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  ABANDONED: 'ABANDONED'
};

exports.FlashcardDifficulty = exports.$Enums.FlashcardDifficulty = {
  NOUVEAU: 'NOUVEAU',
  DIFFICILE: 'DIFFICILE',
  MOYEN: 'MOYEN',
  FACILE: 'FACILE',
  ACQUISE: 'ACQUISE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Subject: 'Subject',
  Category: 'Category',
  Theory: 'Theory',
  Quiz: 'Quiz',
  Question: 'Question',
  Option: 'Option',
  MatchingPair: 'MatchingPair',
  QuizAttempt: 'QuizAttempt',
  Answer: 'Answer',
  Flashcard: 'Flashcard'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
